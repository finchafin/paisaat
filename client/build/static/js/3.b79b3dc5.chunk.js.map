{"version":3,"sources":["static/images/user.jpg","Profile/Components/Bio/Bio.module.css","Profile/Components/Post/Comments/NewComment/NewComment.module.css","Profile/Components/Post/Comments/Comments.module.css","Profile/Components/Post/Post.module.css","Profile/Components/Bio/Bio.js","Profile/Components/Buddies.js","Profile/Components/Topics.js","Profile/Components/Post/Comments/NewComment/NewComment.js","Profile/Components/Post/Comments/Comments.js","Profile/Components/Post/Post.js","Profile/Containers/Posts/Posts.js","Profile/Profile.js","pages/Profile.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Bio","props","classes","useState","bio","setBio","newBio","setNewBio","showForm","setShowForm","userCTX","useContext","UserState","togglrFormHandler","prevState","Paper","className","style","fontSize","name","email","cssClassses","form","onSubmit","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","userId","user","_id","then","res","json","msg","catch","err","noValidate","autoComplete","TextField","bioInput","value","label","multiline","rows","variant","onChange","target","Button","submitBtn","type","updateBtn","onClick","width","maxWidth","backgroundColor","background","Buddies","List","component","ListItem","button","ListItemText","primary","Topics","newComment","cssClasses","from","submit","comment","margin","val","change","id","btn","marginTop","purple","getContrastText","deepPurple","Comment","cmtText","setCmtText","cmts","setCmts","useEffect","postId","comments","map","Divider","top","Avatar","avatar","join","Typography","paragraph","NewComment","trim","data","newCmt","imageUrl","prevCmts","lastLine","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","Post","expanded","setExpanded","liked","setLiked","likesCount","setLikesCount","displayTopics","topics","topic","index","gutterBottom","date","slice","likedClasses","cssClasss","elevation","Card","CardHeader","owner","title","subheader","CardContent","imgUrl","postImage","src","alt","CardActions","disableSpacing","IconButton","prevCount","clsx","Collapse","in","timeout","unmountOnExit","Posts","userState","posts","setPosts","isPostsEmpty","setIsPostsEmpty","localStorage","getItem","length","displayPosts","post","postText","postTopics","postedBy","likes","includes","fontWeight","to","Profile","Container","Grid","container","item","xs","display","justifyContent","alignItems","flexDirection","border","borderRadius","jerry","Hidden","smDown","followers","following","prof","sm","ProfilePage"],"mappings":"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","file":"static/js/3.b79b3dc5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.bcd1d9ef.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Bio_form__sT09M\",\"bioInput\":\"Bio_bioInput__1yBn7\",\"submitBtn\":\"Bio_submitBtn__12-gA\",\"updateBtn\":\"Bio_updateBtn__FH0DU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewComment_form__3yeEH\",\"comment\":\"NewComment_comment__XcXqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comments_Comment__G9r7h\",\"top\":\"Comments_top__NOWHF\",\"avatar\":\"Comments_avatar__Ax3IP\",\"name\":\"Comments_name__11DCS\",\"lastLine\":\"Comments_lastLine__3DpCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postImage\":\"Post_postImage__20SJp\",\"red\":\"Post_red__2a3qW\"};","import { useState, useContext } from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport UserState from \"../../../store/user-state\";\r\nimport cssClassses from \"./Bio.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Bio = (props) => {\r\n  const classes = useStyles();\r\n  const [bio, setBio] = useState(props.bio);\r\n  const [newBio, setNewBio] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const userCTX = useContext(UserState);\r\n\r\n  const changedBioInput = (e) => {\r\n    setNewBio(e.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"UPDATING BIO\", newBio);\r\n    if (newBio) {\r\n      fetch(\"/updateBio\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userId: userCTX.user._id, bio: newBio }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.msg === \"OK\") {\r\n            setBio(newBio);\r\n            userCTX.user.bio = newBio;\r\n          }\r\n          togglrFormHandler();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const togglrFormHandler = () => {\r\n    setShowForm((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <h3>User Details</h3>\r\n      <p style={{ fontSize: \"1rem\", textAlign: \"left\" }}>Name : {props.name}</p>\r\n      <p style={{ fontSize: \"1rem\", textAlign: \"left\" }}>\r\n        Email : {props.email}\r\n      </p>\r\n      <p style={{ fontSize: \"1rem\" }}>{bio ? bio : \"ADD YOUR BIO\"}</p>\r\n      {showForm && (\r\n        <form\r\n          className={cssClassses.form}\r\n          onSubmit={formSubmitHandler}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            className={cssClassses.bioInput}\r\n            value={newBio}\r\n            label=\"Describe Yourself\"\r\n            multiline\r\n            rows={2}\r\n            variant=\"filled\"\r\n            onChange={changedBioInput}\r\n          />\r\n          <Button\r\n            className={cssClassses.submitBtn}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Update Bio\r\n          </Button>\r\n        </form>\r\n      )}\r\n      <Button\r\n        className={cssClassses.updateBtn}\r\n        onClick={togglrFormHandler}\r\n        variant=\"contained\"\r\n      >\r\n        {!showForm? 'Update Your Bio' : \"Close\"}\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Buddies() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" >\r\n        <ListItem button>\r\n          <ListItemText primary=\"Jimmy\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemText primary=\"Taral Sharma\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemText primary=\"Vijayant Pathak\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemText primary=\"Sugam Jaiswal\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Topics() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" >\r\n        <ListItem button>\r\n          <ListItemText primary=\"Blockchain\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemText primary=\"Finance\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemText primary=\"Bubble\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemText primary=\"Mutual Funds\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport cssClasses from \"./NewComment.module.css\";\r\n\r\nconst newComment = (props) => {\r\n  return (\r\n    <form className={cssClasses.from} onSubmit={props.submit} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        className={cssClasses.comment}\r\n        style={{ margin: \"0 5% 10px 30px\" }}\r\n        value={props.val}\r\n        onChange={props.change}\r\n        id=\"outlined-basic\"\r\n        label=\"Add a comment\"\r\n        variant=\"outlined\"\r\n      />\r\n      <Button\r\n        className={cssClasses.btn}\r\n        style={{ marginTop: \"8.5px\" }}\r\n        type=\"submit\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        Post\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default newComment;\r\n","import { Fragment, useState, useContext, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport NewComment from \"./NewComment/NewComment\";\r\nimport UserState from \"../../../../store/user-state\";\r\nimport cssClasses from \"./Comments.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\nexport default function Comment(props) {\r\n  const [cmtText, setCmtText] = useState(\"\");\r\n  const [cmts, setCmts] = useState([]);\r\n  const userCTX = useContext(UserState);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getComments\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ postId: props.id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCmts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.id]);\r\n\r\n  const commentTextChangeHandler = (e) => {\r\n    setCmtText(e.target.value);\r\n  };\r\n\r\n  const commentsSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (cmtText.trim() === \"\") {\r\n      console.log(\"Comment empty\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      text: cmtText,\r\n      postId: props.id,\r\n      userId: userCTX.user._id,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/comment\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCmtText(\"\");\r\n        if(res.msg === \"success\") {\r\n          const newCmt = {\r\n            text: data.text,\r\n            user: {\r\n              imageUrl: userCTX.user.imageUrl,\r\n              name: userCTX.user.name\r\n            }\r\n          }\r\n          setCmts((prevCmts) => {\r\n            const updatedCmts = [newCmt, ...prevCmts];\r\n            return updatedCmts;\r\n          });\r\n        } else {\r\n          console.log(\"comment failed\");\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const cmts = [{name: \"Swaraj Das\", text: \"This is a comment\"}, {name: \"Swaraj Das\", text: \"This is a comment\"}];\r\n\r\n  const comments = cmts.map((comment) => {\r\n    return (\r\n      <div className={cssClasses.Comment}>\r\n        <Divider />\r\n        <div className={cssClasses.top}>\r\n          <Avatar className={[classes.purple, cssClasses.avatar].join(\" \")}>\r\n            {comment.user.name[0]}\r\n          </Avatar>\r\n          <div>\r\n            <Typography\r\n              className={cssClasses.name}\r\n              style={{ padding: \"0\", margin: \"0\" }}\r\n              variant=\"subtitle2\"\r\n              component=\"p\"\r\n              paragraph\r\n            >\r\n              {comment.user.name}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              paragraph\r\n              style={{ padding: \"0\", margin: \"0\" }}\r\n            >\r\n              {comment.text}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <NewComment\r\n        val={cmtText}\r\n        change={commentTextChangeHandler}\r\n        submit={commentsSubmitHandler}\r\n      />\r\n      {comments}\r\n      <Divider className={cssClasses.lastLine} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\n\r\nimport UserState from \"../../../store/user-state\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport cssClasss from \"./Post.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    marginBottom: 15,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function Post(props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [liked, setLiked] = useState(props.liked);\r\n  const [likesCount, setLikesCount] = useState(props.likesCount);\r\n\r\n  const userCTX = useContext(UserState);\r\n  const classes = useStyles();\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const displayTopics = props.topics.map((topic, index) => {\r\n    return (\r\n      <Typography\r\n        key={index}\r\n        variant=\"h6\"\r\n        component=\"p\"\r\n        style={{ color: \"#2BAE66\" }}\r\n        gutterBottom\r\n      >\r\n        #{topic}\r\n      </Typography>\r\n    );\r\n  });\r\n\r\n  const fulldate = props.date;\r\n  const date = fulldate.slice(0, 10);\r\n\r\n  let likedClasses = \"\";\r\n  if (liked) {\r\n    likedClasses = cssClasss.red;\r\n  }\r\n\r\n  const likePostHandler = () => {\r\n    if (!liked) {\r\n      setLiked(true);\r\n      setLikesCount((prevCount) => prevCount + 1);\r\n\r\n      const data = {\r\n        postId: props.id,\r\n        userId: userCTX.user._id,\r\n      };\r\n      fetch(\"/likePost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.msg === \"Server Error\") {\r\n            setLiked(false);\r\n            setLikesCount((prevCount) => prevCount - 1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          setLiked(false);\r\n          setLikesCount((prevCount) => prevCount - 1);\r\n        });\r\n    } else {\r\n      setLiked(false);\r\n      setLikesCount((prevCount) => prevCount - 1);\r\n\r\n      const data = {\r\n        postId: props.id,\r\n        userId: userCTX.user._id,\r\n      };\r\n      fetch(\"/unlikePost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.msg === \"Server Error\") {\r\n            setLiked(true);\r\n            setLikesCount((prevCount) => prevCount + 1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          setLiked(true);\r\n          setLikesCount((prevCount) => prevCount + 1);\r\n        });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {props.owner[0]}\r\n            </Avatar>\r\n          }\r\n          title={props.owner}\r\n          subheader={date}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {props.text}\r\n          </Typography>\r\n          {displayTopics}\r\n        </CardContent>\r\n        {props.imgUrl && (\r\n          <img\r\n            className={cssClasss.postImage}\r\n            src={`/${props.imgUrl}`}\r\n            alt=\"Post upload\"\r\n          />\r\n        )}\r\n        <CardActions disableSpacing>\r\n          <IconButton onClick={likePostHandler} aria-label=\"add to favorites\">\r\n            <ThumbUpIcon className={likedClasses} />\r\n          </IconButton>\r\n          &nbsp; {likesCount} Likes\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <QuestionAnswerIcon />\r\n          </IconButton>\r\n          Comments &nbsp;\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Comments id={props.id} />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Post from \"../../Components/Post/Post\";\r\nimport userState from \"../../../store/user-state\";\r\nimport { Button, Divider, Paper } from \"@material-ui/core\";\r\n\r\nconst Posts = () => {\r\n  const userCTX = useContext(userState);\r\n  const [posts, setPosts] = useState([]);\r\n  const [isPostsEmpty, setIsPostsEmpty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let userId = localStorage.getItem(\"userID\");\r\n\r\n    fetch(`/usersAllPost/${userId}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.msg) {\r\n          console.log(\"Something went wrong\");\r\n          return;\r\n        }\r\n        if (res.length === 0) {\r\n          setIsPostsEmpty(true);\r\n        }\r\n        setPosts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const userId = userCTX.user._id;\r\n\r\n  const displayPosts = posts.map((post) => {\r\n    return (\r\n      <Post\r\n        key={post._id}\r\n        id={post._id}\r\n        text={post.postText}\r\n        topics={post.postTopics}\r\n        owner={post.postedBy.name}\r\n        likesCount={post.likesCount}\r\n        imgUrl={post.imageUrl}\r\n        date={post.date}\r\n        liked={post.likes.includes(userId)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isPostsEmpty && (\r\n        <>\r\n          <Paper\r\n            style={{\r\n              margin: \"10px 0\",\r\n              padding: \"5px 10px\",\r\n              color: \"#2BAE66\",\r\n              fontWeight: 500,\r\n              fontSize: \"1.4rem\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            You have no posts to display Here\r\n            <Divider />\r\n            Create your First Post Today\r\n          </Paper>\r\n          <Link to=\"/app/home/createpost\">\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Create Yout first post today for the finance community\r\n          </Button>\r\n          </Link>\r\n        </>\r\n      )}\r\n      <Fragment>{displayPosts}</Fragment>\r\n    </>\r\n  );\r\n};\r\nexport default Posts;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Bio from \"./Components/Bio/Bio\";\r\nimport Buddies from \"./Components/Buddies\";\r\nimport Topics from \"./Components/Topics\";\r\nimport Posts from './Containers/Posts/Posts';\r\nimport jerry from \"../static/images/user.jpg\"\r\nimport UserState from '../store/user-state';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const userCTX = useContext(UserState);\r\n  const user = userCTX.user;\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Bio \r\n            name={user? user.name : \"\"}\r\n            email={user? user.email : \"\"}\r\n            bio={user? user.bio: \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{\r\n              height: \"50%\",\r\n              width: \"50%\",\r\n              margin: \"1%\",\r\n              border: \"2px solid #086cdf\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n            src={jerry}\r\n            alt=\"profile\"\r\n          />\r\n          <br />\r\n          <Hidden smDown>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{\r\n                    color: \"#086cdf\",\r\n                    fontSize: \"1rem\",\r\n                    backgroundColor: \"#FCF6F5\",\r\n                  }}\r\n                >\r\n                  <h4>Followers</h4>{user? user.followers.length: 0}\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{\r\n                    color: \"#086cdf\",\r\n                    fontSize: \"1rem\",\r\n                    backgroundColor: \"#FCF6F5\",\r\n                  }}\r\n                >\r\n                  <h4>Following</h4>{user ? user.following.length: 0}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper style={prof} className={classes.paper}>\r\n            Financial Buddies\r\n            <Buddies></Buddies>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3} style={{ marginTop: \"0%\" }}>\r\n        <Grid item xs>\r\n          <Paper style={prof} className={classes.paper}>\r\n            <h3>Topics/pages \"name\" follows</h3>\r\n            <Topics></Topics>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item sm={8} xs={12}>\r\n            <Posts />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\nconst prof = {\r\n  border: \"1px solid #086cdf\",\r\n  backgroundColor: \"#FCF6F5\",\r\n  color: \"#086cdf\",\r\n};\r\n","import Profile from '../Profile/Profile';\r\n\r\nconst ProfilePage = () => <Profile />;\r\n\r\nexport default ProfilePage;"],"sourceRoot":""}