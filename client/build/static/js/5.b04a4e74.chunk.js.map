{"version":3,"sources":["static/images/user.jpg","PeoplesProfile/Components/Post/Comments/NewComment/NewComment.module.css","PeoplesProfile/Components/Post/Comments/Comments.module.css","PeoplesProfile/Components/Post/Post.module.css","PeoplesProfile/Components/Post/Comments/NewComment/NewComment.js","PeoplesProfile/Components/Post/Comments/Comments.js","PeoplesProfile/Components/Post/Post.js","PeoplesProfile/Containers/Posts/Posts.js","PeoplesProfile/PeoplesProfile.js"],"names":["module","exports","newComment","props","className","cssClasses","from","onSubmit","submit","noValidate","autoComplete","TextField","comment","style","margin","value","val","onChange","change","id","label","variant","Button","btn","marginTop","type","color","useStyles","makeStyles","theme","purple","palette","getContrastText","deepPurple","backgroundColor","Comment","useState","cmtText","setCmtText","cmts","setCmts","userCTX","useContext","UserState","classes","useEffect","fetch","method","headers","body","JSON","stringify","postId","then","res","json","console","log","catch","err","comments","map","Divider","top","Avatar","avatar","join","user","name","Typography","padding","component","paragraph","text","NewComment","e","target","preventDefault","trim","data","userId","_id","msg","newCmt","imageUrl","prevCmts","lastLine","root","maxWidth","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","Post","expanded","setExpanded","liked","setLiked","likesCount","setLikesCount","displayTopics","topics","topic","index","gutterBottom","date","slice","likedClasses","cssClasss","Paper","elevation","Card","CardHeader","owner","title","subheader","CardContent","imgUrl","postImage","src","alt","CardActions","disableSpacing","IconButton","onClick","prevCount","clsx","Collapse","in","timeout","unmountOnExit","Posts","userState","posts","setPosts","isPostsEmpty","setIsPostsEmpty","localStorage","getItem","length","displayPosts","post","postText","postTopics","postedBy","likes","includes","fontWeight","fontSize","textAlign","flexGrow","paper","spacing","secondary","width","button","Profile","params","useParams","following","userid","setFollowing","setItem","Container","Grid","container","item","sm","xs","border","borderRadius","jerry","follow","filter","i","push","prevState"],"mappings":"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","file":"static/js/5.b04a4e74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.bcd1d9ef.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewComment_form__fa4Nt\",\"comment\":\"NewComment_comment__1oAP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comments_Comment__1G5pk\",\"top\":\"Comments_top__8iFFN\",\"avatar\":\"Comments_avatar__GMljz\",\"name\":\"Comments_name__3mIEB\",\"lastLine\":\"Comments_lastLine__2Cpyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postImage\":\"Post_postImage__3MqvR\",\"red\":\"Post_red__ZjPqx\"};","import TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport cssClasses from \"./NewComment.module.css\";\r\n\r\nconst newComment = (props) => {\r\n  return (\r\n    <form className={cssClasses.from} onSubmit={props.submit} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        className={cssClasses.comment}\r\n        style={{ margin: \"0 5% 10px 30px\" }}\r\n        value={props.val}\r\n        onChange={props.change}\r\n        id=\"outlined-basic\"\r\n        label=\"Add a comment\"\r\n        variant=\"outlined\"\r\n      />\r\n      <Button\r\n        className={cssClasses.btn}\r\n        style={{ marginTop: \"8.5px\" }}\r\n        type=\"submit\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        Post\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default newComment;\r\n","import { Fragment, useState, useContext, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport NewComment from \"./NewComment/NewComment\";\r\nimport UserState from \"../../../../store/user-state\";\r\nimport cssClasses from \"./Comments.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\nexport default function Comment(props) {\r\n  const [cmtText, setCmtText] = useState(\"\");\r\n  const [cmts, setCmts] = useState([]);\r\n  const userCTX = useContext(UserState);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getComments\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ postId: props.id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCmts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.id]);\r\n\r\n  const commentTextChangeHandler = (e) => {\r\n    setCmtText(e.target.value);\r\n  };\r\n\r\n  const commentsSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (cmtText.trim() === \"\") {\r\n      console.log(\"Comment empty\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      text: cmtText,\r\n      postId: props.id,\r\n      userId: userCTX.user._id,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/comment\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCmtText(\"\");\r\n        if(res.msg === \"success\") {\r\n          const newCmt = {\r\n            text: data.text,\r\n            user: {\r\n              imageUrl: userCTX.user.imageUrl,\r\n              name: userCTX.user.name\r\n            }\r\n          }\r\n          setCmts((prevCmts) => {\r\n            const updatedCmts = [newCmt, ...prevCmts];\r\n            return updatedCmts;\r\n          });\r\n        } else {\r\n          console.log(\"comment failed\");\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const cmts = [{name: \"Swaraj Das\", text: \"This is a comment\"}, {name: \"Swaraj Das\", text: \"This is a comment\"}];\r\n\r\n  const comments = cmts.map((comment) => {\r\n    return (\r\n      <div className={cssClasses.Comment}>\r\n        <Divider />\r\n        <div className={cssClasses.top}>\r\n          <Avatar className={[classes.purple, cssClasses.avatar].join(\" \")}>\r\n            {comment.user.name[0]}\r\n          </Avatar>\r\n          <div>\r\n            <Typography\r\n              className={cssClasses.name}\r\n              style={{ padding: \"0\", margin: \"0\" }}\r\n              variant=\"subtitle2\"\r\n              component=\"p\"\r\n              paragraph\r\n            >\r\n              {comment.user.name}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              paragraph\r\n              style={{ padding: \"0\", margin: \"0\" }}\r\n            >\r\n              {comment.text}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <NewComment\r\n        val={cmtText}\r\n        change={commentTextChangeHandler}\r\n        submit={commentsSubmitHandler}\r\n      />\r\n      {comments}\r\n      <Divider className={cssClasses.lastLine} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\n\r\nimport UserState from \"../../../store/user-state\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport cssClasss from \"./Post.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    marginBottom: 15,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function Post(props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [liked, setLiked] = useState(props.liked);\r\n  const [likesCount, setLikesCount] = useState(props.likesCount);\r\n\r\n  const userCTX = useContext(UserState);\r\n  const classes = useStyles();\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const displayTopics = props.topics.map((topic, index) => {\r\n    return (\r\n      <Typography\r\n        key={index}\r\n        variant=\"h6\"\r\n        component=\"p\"\r\n        style={{ color: \"#2BAE66\" }}\r\n        gutterBottom\r\n      >\r\n        #{topic}\r\n      </Typography>\r\n    );\r\n  });\r\n\r\n  const fulldate = props.date;\r\n  const date = fulldate.slice(0, 10);\r\n\r\n  let likedClasses = \"\";\r\n  if (liked) {\r\n    likedClasses = cssClasss.red;\r\n  }\r\n\r\n  const likePostHandler = () => {\r\n    if (!liked) {\r\n      setLiked(true);\r\n      setLikesCount((prevCount) => prevCount + 1);\r\n\r\n      const data = {\r\n        postId: props.id,\r\n        userId: userCTX.user._id,\r\n      };\r\n      fetch(\"/likePost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.msg === \"Server Error\") {\r\n            setLiked(false);\r\n            setLikesCount((prevCount) => prevCount - 1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          setLiked(false);\r\n          setLikesCount((prevCount) => prevCount - 1);\r\n        });\r\n    } else {\r\n      setLiked(false);\r\n      setLikesCount((prevCount) => prevCount - 1);\r\n\r\n      const data = {\r\n        postId: props.id,\r\n        userId: userCTX.user._id,\r\n      };\r\n      fetch(\"/unlikePost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.msg === \"Server Error\") {\r\n            setLiked(true);\r\n            setLikesCount((prevCount) => prevCount + 1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          setLiked(true);\r\n          setLikesCount((prevCount) => prevCount + 1);\r\n        });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {props.owner[0]}\r\n            </Avatar>\r\n          }\r\n          title={props.owner}\r\n          subheader={date}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {props.text}\r\n          </Typography>\r\n          {displayTopics}\r\n        </CardContent>\r\n        {props.imgUrl && (\r\n          <img\r\n            className={cssClasss.postImage}\r\n            src={`/${props.imgUrl}`}\r\n            alt=\"Post upload\"\r\n          />\r\n        )}\r\n        <CardActions disableSpacing>\r\n          <IconButton onClick={likePostHandler} aria-label=\"add to favorites\">\r\n            <ThumbUpIcon className={likedClasses} />\r\n          </IconButton>{\" \"}\r\n          &nbsp; {likesCount} Likes\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <QuestionAnswerIcon />\r\n          </IconButton>\r\n          Comments &nbsp;\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Comments id={props.id} />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext, Fragment } from \"react\";\r\n\r\nimport Post from \"../../Components/Post/Post\";\r\nimport userState from \"../../../store/user-state\";\r\nimport { Divider, Paper } from \"@material-ui/core\";\r\n\r\nconst Posts = () => {\r\n  const userCTX = useContext(userState);\r\n  const [posts, setPosts] = useState([]);\r\n  const [isPostsEmpty, setIsPostsEmpty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let userId = localStorage.getItem(\"searchid\");\r\n\r\n    console.log(userId);\r\n    fetch(`/usersAllPost/${userId}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.msg) {\r\n          console.log(\"Something went wrong\");\r\n          return;\r\n        }\r\n        if (res.length === 0) {\r\n          setIsPostsEmpty(true);\r\n        }\r\n        setPosts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const userId = userCTX.user._id;\r\n\r\n  const displayPosts = posts.map((post) => {\r\n    return (\r\n      <Post\r\n        key={post._id}\r\n        id={post._id}\r\n        text={post.postText}\r\n        topics={post.postTopics}\r\n        owner={post.postedBy.name}\r\n        likesCount={post.likesCount}\r\n        imgUrl={post.imageUrl}\r\n        date={post.date}\r\n        liked={post.likes.includes(userId)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isPostsEmpty && (\r\n        <Paper\r\n          style={{\r\n            margin: \"10px 0\",\r\n            padding: \"5px 10px\",\r\n            color: \"#2BAE66\",\r\n            fontWeight: 500,\r\n            fontSize: \"1.4rem\",\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          You have no posts to display Here\r\n          <Divider />\r\n          Create your First Post Today \r\n        </Paper>\r\n      )}\r\n      <Fragment>{displayPosts}</Fragment>\r\n    </>\r\n  );\r\n};\r\nexport default Posts;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Posts from \"./Containers/Posts/Posts\";\r\nimport jerry from \"../static/images/user.jpg\";\r\nimport UserState from \"../store/user-state\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    width: \"250px\",\r\n    margin: \"20px 0\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#086cdf\",\r\n    color: \"#fff\",\r\n    margin: \"20px 5px\",\r\n    width: \"200px\",\r\n  },\r\n}));\r\n\r\nexport default function Profile() {\r\n  const classes = useStyles();\r\n  const userCTX = useContext(UserState);\r\n  const user = userCTX.user;\r\n  const params = useParams();\r\n  const [following, setFollowing] = useState(\r\n    user.following.includes(params.userid)\r\n  );\r\n  localStorage.setItem(\"searchid\", params.userid);\r\n\r\n  const followBtnClickHandler = () => {\r\n\r\n    fetch(\"/addfollowing\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userId: user._id, follow: params.userid }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>{\r\n        if(res.msg === \"Done\"){\r\n          if(following){\r\n            user.following = user.following.filter(i => i !== params.userid);\r\n          } else {\r\n            user.following.push(params.userid);\r\n          }\r\n          setFollowing((prevState) => !prevState);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={3}>\r\n        <Grid item sm={4} xs={12}>\r\n          <img\r\n            style={{\r\n              height: \"200px\",\r\n              width: \"200px\",\r\n              margin: \"1%\",\r\n              border: \"2px solid #2BAE66\",\r\n              borderRadius: \"20px\",\r\n            }}\r\n            src={jerry}\r\n            alt=\"profile\"\r\n          />\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={followBtnClickHandler}\r\n            >\r\n              { following ? 'UnFollow': 'Follow'}\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Grid item sm={8} xs={12}>\r\n          <Posts />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}