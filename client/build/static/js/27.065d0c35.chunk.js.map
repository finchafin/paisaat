{"version":3,"sources":["../node_modules/@material-ui/icons/ExpandMore.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","About/About.js","pages/About.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","AccordionContext","Accordion","props","ref","arr","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","useControlled","controlled","name","state","_useControlled2","_slicedToArray","setExpandedState","handleChange","event","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","toggle","Paper","_extends","clsx","root","rounded","Provider","in","timeout","id","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","AccordionSummary","expandIcon","focusVisibleClassName","_props$IconButtonProp","IconButtonProps","onClick","_React$useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","component","focusVisible","focused","IconButton","edge","tabIndex","minHeight","padding","spacing","cursor","focus","disabledOpacity","flexGrow","transform","AccordionDetails","useStyles","makeStyles","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleAccordion","Container","style","about","Typography","color","border","AboutPage"],"mappings":"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","file":"static/js/27.065d0c35.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).\n    // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.\n    if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function SimpleAccordion() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <Accordion style={about}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>What is Paisaat?</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Paisaat is the world first social media for finance only.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion style={about}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>What do we do?</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            We connect like minded finance enthusiast people to drive high\r\n            engagement and give better social media experience to our users.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion style={about}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Our Vision.</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Our vision is to financially empower people and spread financial\r\n            wisdom among the general masses for the empowerment of individuals\r\n            while at the same time creating a global community of finance.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n}\r\nconst about = {\r\n  color: \"white\",\r\n  backgroundColor: \"#4280c7\",\r\n  border: \"1px solid white\",\r\n};\r\n","import About from '../About/About';\r\n\r\nconst AboutPage = () => {\r\n    return <About />\r\n};\r\n\r\nexport default AboutPage;"],"sourceRoot":""}